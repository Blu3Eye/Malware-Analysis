import sys 
import pefile 
import idaapi 
import idc 
import idautils 

def read_bytes(start_ea,size):
    data = idaapi.get_bytes(start_ea,size)
    if data is None:
        print(f"Failed to read bytes at {hex(start_ea)}")
    return data



def decrypt_bytes(key,data,size):
    #encrypted data bytes buffer 
    enc_data_bytes = bytearray(data)
    buffer = [0] * 0x5F5E100
    #iterate through encrypted data bytes buffer to decrypt 
    for i in range(size):
        idx =  i + 665 * i * buffer[0]
        enc_data_bytes[idx] ^= key[i % len(key)]
    return bytes(enc_data_bytes)
        


def patch_bytes_in_idb(key,start_ea,size):
    # Read the encrypted data from the IDA database
    encrypted_data = read_bytes(start_ea,size)
    # Decrypt the data
    decrypted_data = decrypt_bytes(key,encrypted_data,size)
    # Write the decrypted data back to the IDA database
    idaapi.patch_bytes(start_ea,decrypted_data)
    
if __name__ == "__main__":
    key = [0x59,0x4b,0x66,0x50,0x6c,0x72,0x76,0x4c,0x70,0x30,0x3c,0x42,0x61,0x73,0x26,0x4A,0x3E,0x25,0x64,0x75,0x5a,0x4e,0x74,0x40,0x6c,0x0]
    start_ea = 0x00433B1E + 0x15d38 
    size = 0x7D0
    patch_bytes_in_idb(key,start_ea,size)
    print("[+]Done patching")
    
    
  