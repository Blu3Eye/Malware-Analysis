import base64

def raccoon_str_decrypt(base64_encoded_text):
    key_stream = b"edinayarossiya"
    key_stream_len = len(key_stream)
    state_permutation = list(range(256))
    var_base64_decoded = [byte for byte in base64.b64decode(base64_encoded_text)]
    var_base64_decoded_str_len = len(var_base64_decoded)
    j = 0
    #KSA
    for i in range(256):
        temp = state_permutation[i]
        j = (j+ state_permutation[i] + key_stream[i % key_stream_len])% 256
        state_permutation[i] = state_permutation[j]
        state_permutation[j] = temp
    #PSGA this is the part where we're generating this PR key stream bytes that will be used for the encryption and decryption processes
    k = 0
    output = ""
    lst_counter = 0
    for i in range(var_base64_decoded_str_len):
        i = (i+1)%256
        temp = state_permutation[i]
        k = (temp+k)%256
        state_permutation[i] = state_permutation[k]
        state_permutation[k] = temp

        output+= chr(var_base64_decoded[lst_counter] ^ state_permutation[(temp + state_permutation[i]) % 256])
        lst_counter +=1
    return output



